name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


env: 
  docker_username: camillafrank
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        working-directory: ./frontend
        run: go build -v

      - name: Upload repo
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .
          include-hidden-files: true

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: Run Tests
        working-directory: ./frontend
        run: go test -v

  docker-image-push:
    runs-on: ubuntu-latest
    needs: build
    permissions: 
      packages: write
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with: 
          name: code
          path: .
      - name: build docker
        run: bash ci/build-docker.sh
      - name: push docker
        run: bash ci/push-docker.sh

  trivy-security-scan:
    needs: docker-image-push
    runs-on: ubuntu-latest
    env:
      REPO: ghcr.io/katbirk/fortune-cookie
      TAG: ${{ github.sha }}
    steps:
      - name: Scan frontend image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REPO }}-frontend:1.0-${{ env.TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Scan backend image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REPO }}-backend:1.0-${{ env.TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  deploy:
    needs: trivy-security-scan
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Set kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      - name: Apply deployment
        run: kubectl --kubeconfig kubeconfig apply -f ./kubernetes
      - name: Get NodePort and Node IP
        run: |
          NODE_PORT=$(kubectl --kubeconfig kubeconfig get svc frontend -o jsonpath='{.spec.ports[0].nodePort}')
          NODE_IP=$(kubectl --kubeconfig kubeconfig get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="ExternalIP")].address}')
          echo "APP_URL=http://${NODE_IP}:${NODE_PORT}" >> $GITHUB_ENV
          echo "http://${NODE_IP}:${NODE_PORT}" > service_url.txt
      - name: Upload service URL
        uses: actions/upload-artifact@v4
        with:
          name: service-url
          path: service_url.txt

  functional-test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Download service URL
        uses: actions/download-artifact@v4
        with:
          name: service-url
      - name: Run functional test
        run: |
          APP_URL=$(cat service_url.txt)
          chmod +x ci/test-app.sh
          APP_URL=$APP_URL ci/test-app.sh

  linting:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: run linting
        uses: super-linter/super-linter/slim@v7 
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true

